<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
  xmlns:content="http://purl.org/rss/1.0/modules/content/"
  xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd"
  xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
  <channel>
    <title>Laziness, Impatience, and Hubris</title>
    <link>blog url</link>
    <description>RSS feed for Laziness, Impatience, and Hubris</description>
    <pubDate>Tue, 26 Jun 2012 10:34:00 -0700</pubDate>
    <item>
      <title>Perl Windows - Grab all the system tray icons &amp; get their co-ordinates</title>
      <link>blog url/perl/windows/automation/2012/06/26/perl-windows-tray-automation.html</link>
      <description>&lt;p&gt;While automating applications on Windows, every now &amp;amp; then I run in to a situation where I have to find a tray icon &amp;amp; do some mouse operations on it. And for the most part, I overlooked it as it was just a small part of my automation needs. Well, it was time to scratch that small itch as it was bothering me. So with the help of &lt;a href=&quot;http://stackoverflow.com/questions/11199287/using-perl-how-can-obtain-information-about-the-icons-in-windows-taskbar-notif&quot;&gt;Sinan on StackOverflow&lt;/a&gt;, I ended up writing this script.&lt;/p&gt;
</description>
      <pubDate>Tue, 26 Jun 2012 10:34:00 -0700</pubDate>
      <dc:date>2012-06-26T10:34:00-07:00</dc:date>
    </item>
    <item>
      <title>iperf 2.0.4 Windows (win32) native binary</title>
      <link>blog url/iperf/windows/compiled/2010/07/23/iperf-windows-compiled.html</link>
      <description>&lt;p&gt;The last compiled binary for Windows was v1.7.0. But, I like the newer -y option which dumps out the report in CSV format. With the help of this &lt;a href=&quot;http://sourceforge.net/tracker/index.php?func=detail&amp;amp;aid=2919936&amp;amp;group_id=128336&amp;amp;atid=711373&quot;&gt;patch&lt;/a&gt;, I managed to create a binary for Windows. You can &lt;a href=&quot;/assets/files/iperf-2.0.4-win32.zip&quot;&gt;download it here&lt;/a&gt;.&lt;/p&gt;
</description>
      <pubDate>Fri, 23 Jul 2010 10:29:00 -0700</pubDate>
      <dc:date>2010-07-23T10:29:00-07:00</dc:date>
    </item>
    <item>
      <title>Replace QTP with Selenium + AutoIt + Applescript - Part I</title>
      <link>blog url/qtp/selenium/automation/2010/06/13/replace-qtp-with-selenium.html</link>
      <description>&lt;p&gt;I hate QTP. Why? Because it sucks. Of course, QTP fanboys will immediately jump up &amp;amp; down stating that I don&amp;#39;t know how to use QTP. On the contrary, I know exactly what I am talking about. As of this writing, QTP still does not support Windows 7, heck it still doesn&amp;#39;t support Firefox 3.6! Are you kidding me? Well, apart from HP&amp;#39;s snail pace development process, I have other problems with the tool itself. Like its really retarded scripting engine (which uses vbscript), which does not provide you any real mechanism to maintain frameworks. &lt;/p&gt;
</description>
      <pubDate>Sun, 13 Jun 2010 09:20:00 -0700</pubDate>
      <dc:date>2010-06-13T09:20:00-07:00</dc:date>
    </item>
    <item>
      <title>Hacking Selenium to improve its performance on IE</title>
      <link>blog url/selenium/performance/ie/2010/02/03/selenium-improve-performance-IE.html</link>
      <description>&lt;p&gt;TL;DR of the post below; You have to perform all these steps &amp;amp; in some instances, you can squeeze out better performance from other browsers too:&lt;/p&gt;
</description>
      <pubDate>Wed, 03 Feb 2010 08:14:00 -0800</pubDate>
      <dc:date>2010-02-03T08:14:00-08:00</dc:date>
    </item>
    <dc:date>2012-06-26T10:34:00-07:00</dc:date>
  </channel>
</rss>